# Networking (https://rabbitmq.com/networking.html)
# =================================================
# Port(s): 5672 and 5671 are used by AMQP 0-9-1 and 1.0 clients without and with TLS.
# By default, RabbitMQ will listen on port 5672 on all available interfaces.
listeners.tcp.default = 5672
# To listen on a specific interface, provide an IP address with port; e.g., to listen only on
# localhost for both IPv4 and IPv6:
# IPv4
# listeners.tcp.local = 127.0.0.1:5672
# IPv6
# listeners.tcp.local_v6 = ::1:5672
#
# Security, Access Control (https://rabbitmq.com/access-control.html)
# ===================================================================
# The default "guest" user is only permitted to access the server via a loopback interface; e.g.,
# localhost.
# loopback_users.guest = true
# It is possible to allow the guest user to connect from a remote host by setting the
# loopback_users configuration to none. Allowing remote connections for default user is highly
# discouraged as it dramatically decreases the security of the system!!!
loopback_users.guest = false
# loopback_users = none
#
# By default, free disk space must exceed 50MB. When free disk space drops below a configured limit
# (50 MB by default), an alarm will be triggered and all producers will be blocked.
disk_free_limit.absolute = 10MB
#
# Virtual host to create when RabbitMQ creates a new database from scratch. The exchange
# 'amq.rabbitmq.log' will exist in this virtual host.
default_vhost = /
#
# User name to create when RabbitMQ creates a new database from scratch.
# default_user = guest
# Password for the default user.
# default_pass = guest
#
# Cluster formation (https://www.rabbitmq.com/cluster-formation.html)
# Use rabbit_peer_discovery_k8s as the discovery backend.
cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
# Define the k8s host (for API access).
cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
# Use hostname as an addressing scheme.
# hostname is the recommended option but has limitations: it can only be used with Stateful Sets
# (also highly recommended) and headless services.
#
# Should RabbitMQ node name be computed from the pod's hostname or IP address?
# IP addresses are not stable, so using [stable] hostnames is recommended when possible.
# When this value is changed, so should the variable used to set the RABBITMQ_NODENAME
# environment variable.
cluster_formation.k8s.address_type = hostname
# Set to false if automatic removal of unknown/absent nodes is desired. This can be dangerous, see
#  http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
#  https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
cluster_formation.node_cleanup.only_log_warning = true
# How often should node cleanup checks run?
cluster_formation.node_cleanup.interval = 60
cluster_partition_handling = autoheal
# Startup delays (mostly unnecessary with StatefulSet).
cluster_formation.randomized_startup_delay_range.min = 0
cluster_formation.randomized_startup_delay_range.max = 2
# See http://www.rabbitmq.com/ha.html#master-migration-data-locality
queue_master_locator = min-masters
#
log.file.level = debug
log.console = true
log.console.level = debug
#
# Some environments require the use of a custom prefix for all HTTP requests to the management
# plugin. The management.path_prefix setting allows an arbitrary prefix to be set for all HTTP
# request handlers in the management plugin.
#
# Setting management.path_prefix to /my-prefix specifies all API requests to use the URI
# host:port/my-prefix/api/[...]
# The management UI login page will have the URI host:port/my-prefix/ - note that the trailing
# slash is required in this case.
management.path_prefix = /rabbitmq
